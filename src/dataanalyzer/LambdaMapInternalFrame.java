/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dataanalyzer;

import javax.swing.Box;

/**
 *
 * @author Peter
 */
public class LambdaMapInternalFrame extends javax.swing.JInternalFrame {
    //class variables
    CategoricalHashMap dataMap;
    DataAnalyzer dataAnalyzer;
    LambdaMapPanel lambdaMapPanel;
    boolean hasData;
    
    /**
     * Creates new form LambdaMapInternalFrame
     */
    public LambdaMapInternalFrame(DataAnalyzer dataAnalyzer) {
        //initializes lambdaMapInternalFrame
        initComponents();

        //sets class variables
        this.hasData = false;
        this.dataAnalyzer = dataAnalyzer;
        
        //sets the content panel of the frame to a lambdaMapPanel
        lambdaMapPanel = new LambdaMapPanel(dataAnalyzer);
        this.setContentPane(lambdaMapPanel);
    }
    
    public LambdaMapInternalFrame(DataAnalyzer dataAnalyzer, CategoricalHashMap dataMap) {
        //initializes lambdaMapInternalFrame
        initComponents();

        //sets class variables
        this.dataAnalyzer = dataAnalyzer;
        this.hasData = true;
        this.dataMap = dataMap;
        
        //sets the content panel of the frame to a lambdaMapPanel
        lambdaMapPanel = new LambdaMapPanel(dataAnalyzer, dataMap);
        this.setContentPane(lambdaMapPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar = new javax.swing.JMenuBar();
        TableMenu = new javax.swing.JMenu();
        tableSettingsMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        averageMenuItem = new javax.swing.JMenuItem();
        maximumMenuItem = new javax.swing.JMenuItem();
        minimumMenuItem = new javax.swing.JMenuItem();
        injectorTimeMenuItem = new javax.swing.JMenuItem();
        popOutMenu = new javax.swing.JMenu();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(1200, 650));
        setPreferredSize(new java.awt.Dimension(1200, 650));

        TableMenu.setText("Table");

        tableSettingsMenuItem.setText("Table Settings");
        tableSettingsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableSettingsMenuItemActionPerformed(evt);
            }
        });
        TableMenu.add(tableSettingsMenuItem);

        jMenuBar.add(TableMenu);

        viewMenu.setText("View");

        averageMenuItem.setText("Average Lambda");
        averageMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                averageMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(averageMenuItem);

        maximumMenuItem.setText("Maximum Lambda");
        maximumMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maximumMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(maximumMenuItem);

        minimumMenuItem.setText("Minimum Lambda");
        minimumMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimumMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(minimumMenuItem);

        injectorTimeMenuItem.setText("Injector Time");
        injectorTimeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                injectorTimeMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(injectorTimeMenuItem);

        jMenuBar.add(viewMenu);

        popOutMenu.setText("  Pop-Out  ");
        jMenuBar.add(Box.createHorizontalGlue());
        popOutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                popOutMenuMouseClicked(evt);
            }
        });
        jMenuBar.add(popOutMenu);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 994, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableSettingsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableSettingsMenuItemActionPerformed
        lambdaMapPanel.tableSettingCalled();
    }//GEN-LAST:event_tableSettingsMenuItemActionPerformed

    private void averageMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_averageMenuItemActionPerformed
        lambdaMapPanel.averageCalled();
    }//GEN-LAST:event_averageMenuItemActionPerformed

    private void maximumMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maximumMenuItemActionPerformed
        lambdaMapPanel.maxCalled();
    }//GEN-LAST:event_maximumMenuItemActionPerformed

    private void minimumMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimumMenuItemActionPerformed
        lambdaMapPanel.minCalled();
    }//GEN-LAST:event_minimumMenuItemActionPerformed

    private void injectorTimeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_injectorTimeMenuItemActionPerformed
        lambdaMapPanel.InjectorTimesCalled();
    }//GEN-LAST:event_injectorTimeMenuItemActionPerformed

    private void popOutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popOutMenuMouseClicked
        //calls the correct constructor based on wheather data has been loaded
        if(hasData){
            new LambdaMapFrame(dataAnalyzer, dataMap).setVisible(true);
        } else {
            new LambdaMapFrame(dataAnalyzer).setVisible(true);
        }
        
        //closes the internal frame, so that the frame can replace it
        dispose();
    }//GEN-LAST:event_popOutMenuMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu TableMenu;
    private javax.swing.JMenuItem averageMenuItem;
    private javax.swing.JMenuItem injectorTimeMenuItem;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem maximumMenuItem;
    private javax.swing.JMenuItem minimumMenuItem;
    private javax.swing.JMenu popOutMenu;
    private javax.swing.JMenuItem tableSettingsMenuItem;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables
}
